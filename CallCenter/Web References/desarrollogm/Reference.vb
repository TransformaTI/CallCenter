'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
'
Namespace desarrollogm
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="PedidoSoap", [Namespace]:="http://tempuri.org/")>  _
    Partial Public Class Pedido
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private BoletinarPedidoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultaAutotanquesPorRutaYDiaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultaPedidosPorAutotanqueFechaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ReasignacionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtieneCelulasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtieneRutasPorCelulaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtieneAutotanquesPorRutaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CancelaPedidoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CancelaPedidoCallCenterOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RegistrarMensajeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AltaPedidoConfiguracionAnuladaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = "http://pyros:9004/Pedido.asmx"
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event BoletinarPedidoCompleted As BoletinarPedidoCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultaAutotanquesPorRutaYDiaCompleted As ConsultaAutotanquesPorRutaYDiaCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultaPedidosPorAutotanqueFechaCompleted As ConsultaPedidosPorAutotanqueFechaCompletedEventHandler
        
        '''<remarks/>
        Public Event ReasignacionCompleted As ReasignacionCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtieneCelulasCompleted As ObtieneCelulasCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtieneRutasPorCelulaCompleted As ObtieneRutasPorCelulaCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtieneAutotanquesPorRutaCompleted As ObtieneAutotanquesPorRutaCompletedEventHandler
        
        '''<remarks/>
        Public Event CancelaPedidoCompleted As CancelaPedidoCompletedEventHandler
        
        '''<remarks/>
        Public Event CancelaPedidoCallCenterCompleted As CancelaPedidoCallCenterCompletedEventHandler
        
        '''<remarks/>
        Public Event RegistrarMensajeCompleted As RegistrarMensajeCompletedEventHandler
        
        '''<remarks/>
        Public Event AltaPedidoConfiguracionAnuladaCompleted As AltaPedidoConfiguracionAnuladaCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BoletinarPedido", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function BoletinarPedido(ByVal Estacion As String, ByVal Usuario As String, ByVal PedidoReferencia As String, ByVal EsProgramacion As Boolean, ByVal Autotanque As Integer, ByVal IdEstacionSGC As String, ByVal Observaciones As String) As Boolean
            Dim results() As Object = Me.Invoke("BoletinarPedido", New Object() {Estacion, Usuario, PedidoReferencia, EsProgramacion, Autotanque, IdEstacionSGC, Observaciones})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginBoletinarPedido(ByVal Estacion As String, ByVal Usuario As String, ByVal PedidoReferencia As String, ByVal EsProgramacion As Boolean, ByVal Autotanque As Integer, ByVal IdEstacionSGC As String, ByVal Observaciones As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("BoletinarPedido", New Object() {Estacion, Usuario, PedidoReferencia, EsProgramacion, Autotanque, IdEstacionSGC, Observaciones}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndBoletinarPedido(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub BoletinarPedidoAsync(ByVal Estacion As String, ByVal Usuario As String, ByVal PedidoReferencia As String, ByVal EsProgramacion As Boolean, ByVal Autotanque As Integer, ByVal IdEstacionSGC As String, ByVal Observaciones As String)
            Me.BoletinarPedidoAsync(Estacion, Usuario, PedidoReferencia, EsProgramacion, Autotanque, IdEstacionSGC, Observaciones, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub BoletinarPedidoAsync(ByVal Estacion As String, ByVal Usuario As String, ByVal PedidoReferencia As String, ByVal EsProgramacion As Boolean, ByVal Autotanque As Integer, ByVal IdEstacionSGC As String, ByVal Observaciones As String, ByVal userState As Object)
            If (Me.BoletinarPedidoOperationCompleted Is Nothing) Then
                Me.BoletinarPedidoOperationCompleted = AddressOf Me.OnBoletinarPedidoOperationCompleted
            End If
            Me.InvokeAsync("BoletinarPedido", New Object() {Estacion, Usuario, PedidoReferencia, EsProgramacion, Autotanque, IdEstacionSGC, Observaciones}, Me.BoletinarPedidoOperationCompleted, userState)
        End Sub
        
        Private Sub OnBoletinarPedidoOperationCompleted(ByVal arg As Object)
            If (Not (Me.BoletinarPedidoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent BoletinarPedidoCompleted(Me, New BoletinarPedidoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConsultaAutotanquesPorRutaYDia", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultaAutotanquesPorRutaYDia(ByVal Estacion As String, ByVal Ruta As Integer, ByVal FechaI As Date, ByVal FechaF As Date) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultaAutotanquesPorRutaYDia", New Object() {Estacion, Ruta, FechaI, FechaF})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultaAutotanquesPorRutaYDia(ByVal Estacion As String, ByVal Ruta As Integer, ByVal FechaI As Date, ByVal FechaF As Date, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultaAutotanquesPorRutaYDia", New Object() {Estacion, Ruta, FechaI, FechaF}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultaAutotanquesPorRutaYDia(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultaAutotanquesPorRutaYDiaAsync(ByVal Estacion As String, ByVal Ruta As Integer, ByVal FechaI As Date, ByVal FechaF As Date)
            Me.ConsultaAutotanquesPorRutaYDiaAsync(Estacion, Ruta, FechaI, FechaF, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultaAutotanquesPorRutaYDiaAsync(ByVal Estacion As String, ByVal Ruta As Integer, ByVal FechaI As Date, ByVal FechaF As Date, ByVal userState As Object)
            If (Me.ConsultaAutotanquesPorRutaYDiaOperationCompleted Is Nothing) Then
                Me.ConsultaAutotanquesPorRutaYDiaOperationCompleted = AddressOf Me.OnConsultaAutotanquesPorRutaYDiaOperationCompleted
            End If
            Me.InvokeAsync("ConsultaAutotanquesPorRutaYDia", New Object() {Estacion, Ruta, FechaI, FechaF}, Me.ConsultaAutotanquesPorRutaYDiaOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultaAutotanquesPorRutaYDiaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultaAutotanquesPorRutaYDiaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultaAutotanquesPorRutaYDiaCompleted(Me, New ConsultaAutotanquesPorRutaYDiaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConsultaPedidosPorAutotanqueFecha", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultaPedidosPorAutotanqueFecha(ByVal Estacion As String, ByVal Autotanque As Integer, ByVal FechaCompromiso As Date) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultaPedidosPorAutotanqueFecha", New Object() {Estacion, Autotanque, FechaCompromiso})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultaPedidosPorAutotanqueFecha(ByVal Estacion As String, ByVal Autotanque As Integer, ByVal FechaCompromiso As Date, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultaPedidosPorAutotanqueFecha", New Object() {Estacion, Autotanque, FechaCompromiso}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultaPedidosPorAutotanqueFecha(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultaPedidosPorAutotanqueFechaAsync(ByVal Estacion As String, ByVal Autotanque As Integer, ByVal FechaCompromiso As Date)
            Me.ConsultaPedidosPorAutotanqueFechaAsync(Estacion, Autotanque, FechaCompromiso, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultaPedidosPorAutotanqueFechaAsync(ByVal Estacion As String, ByVal Autotanque As Integer, ByVal FechaCompromiso As Date, ByVal userState As Object)
            If (Me.ConsultaPedidosPorAutotanqueFechaOperationCompleted Is Nothing) Then
                Me.ConsultaPedidosPorAutotanqueFechaOperationCompleted = AddressOf Me.OnConsultaPedidosPorAutotanqueFechaOperationCompleted
            End If
            Me.InvokeAsync("ConsultaPedidosPorAutotanqueFecha", New Object() {Estacion, Autotanque, FechaCompromiso}, Me.ConsultaPedidosPorAutotanqueFechaOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultaPedidosPorAutotanqueFechaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultaPedidosPorAutotanqueFechaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultaPedidosPorAutotanqueFechaCompleted(Me, New ConsultaPedidosPorAutotanqueFechaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Reasignacion", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Reasignacion(ByVal Estacion As String, ByVal AutotanqueDestino As Integer, ByVal Datos As System.Data.DataSet, ByVal Usuario As String, ByVal IdEstacionSGC As String) As Boolean
            Dim results() As Object = Me.Invoke("Reasignacion", New Object() {Estacion, AutotanqueDestino, Datos, Usuario, IdEstacionSGC})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginReasignacion(ByVal Estacion As String, ByVal AutotanqueDestino As Integer, ByVal Datos As System.Data.DataSet, ByVal Usuario As String, ByVal IdEstacionSGC As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Reasignacion", New Object() {Estacion, AutotanqueDestino, Datos, Usuario, IdEstacionSGC}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndReasignacion(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ReasignacionAsync(ByVal Estacion As String, ByVal AutotanqueDestino As Integer, ByVal Datos As System.Data.DataSet, ByVal Usuario As String, ByVal IdEstacionSGC As String)
            Me.ReasignacionAsync(Estacion, AutotanqueDestino, Datos, Usuario, IdEstacionSGC, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ReasignacionAsync(ByVal Estacion As String, ByVal AutotanqueDestino As Integer, ByVal Datos As System.Data.DataSet, ByVal Usuario As String, ByVal IdEstacionSGC As String, ByVal userState As Object)
            If (Me.ReasignacionOperationCompleted Is Nothing) Then
                Me.ReasignacionOperationCompleted = AddressOf Me.OnReasignacionOperationCompleted
            End If
            Me.InvokeAsync("Reasignacion", New Object() {Estacion, AutotanqueDestino, Datos, Usuario, IdEstacionSGC}, Me.ReasignacionOperationCompleted, userState)
        End Sub
        
        Private Sub OnReasignacionOperationCompleted(ByVal arg As Object)
            If (Not (Me.ReasignacionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ReasignacionCompleted(Me, New ReasignacionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtieneCelulas", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtieneCelulas(ByVal Estacion As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtieneCelulas", New Object() {Estacion})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginObtieneCelulas(ByVal Estacion As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtieneCelulas", New Object() {Estacion}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtieneCelulas(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtieneCelulasAsync(ByVal Estacion As String)
            Me.ObtieneCelulasAsync(Estacion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtieneCelulasAsync(ByVal Estacion As String, ByVal userState As Object)
            If (Me.ObtieneCelulasOperationCompleted Is Nothing) Then
                Me.ObtieneCelulasOperationCompleted = AddressOf Me.OnObtieneCelulasOperationCompleted
            End If
            Me.InvokeAsync("ObtieneCelulas", New Object() {Estacion}, Me.ObtieneCelulasOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtieneCelulasOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtieneCelulasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtieneCelulasCompleted(Me, New ObtieneCelulasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtieneRutasPorCelula", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtieneRutasPorCelula(ByVal Estacion As String, ByVal Celula As Celula) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtieneRutasPorCelula", New Object() {Estacion, Celula})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginObtieneRutasPorCelula(ByVal Estacion As String, ByVal Celula As Celula, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtieneRutasPorCelula", New Object() {Estacion, Celula}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtieneRutasPorCelula(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtieneRutasPorCelulaAsync(ByVal Estacion As String, ByVal Celula As Celula)
            Me.ObtieneRutasPorCelulaAsync(Estacion, Celula, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtieneRutasPorCelulaAsync(ByVal Estacion As String, ByVal Celula As Celula, ByVal userState As Object)
            If (Me.ObtieneRutasPorCelulaOperationCompleted Is Nothing) Then
                Me.ObtieneRutasPorCelulaOperationCompleted = AddressOf Me.OnObtieneRutasPorCelulaOperationCompleted
            End If
            Me.InvokeAsync("ObtieneRutasPorCelula", New Object() {Estacion, Celula}, Me.ObtieneRutasPorCelulaOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtieneRutasPorCelulaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtieneRutasPorCelulaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtieneRutasPorCelulaCompleted(Me, New ObtieneRutasPorCelulaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtieneAutotanquesPorRuta", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtieneAutotanquesPorRuta(ByVal Estacion As String, ByVal Ruta As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtieneAutotanquesPorRuta", New Object() {Estacion, Ruta})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginObtieneAutotanquesPorRuta(ByVal Estacion As String, ByVal Ruta As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtieneAutotanquesPorRuta", New Object() {Estacion, Ruta}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtieneAutotanquesPorRuta(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtieneAutotanquesPorRutaAsync(ByVal Estacion As String, ByVal Ruta As Integer)
            Me.ObtieneAutotanquesPorRutaAsync(Estacion, Ruta, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtieneAutotanquesPorRutaAsync(ByVal Estacion As String, ByVal Ruta As Integer, ByVal userState As Object)
            If (Me.ObtieneAutotanquesPorRutaOperationCompleted Is Nothing) Then
                Me.ObtieneAutotanquesPorRutaOperationCompleted = AddressOf Me.OnObtieneAutotanquesPorRutaOperationCompleted
            End If
            Me.InvokeAsync("ObtieneAutotanquesPorRuta", New Object() {Estacion, Ruta}, Me.ObtieneAutotanquesPorRutaOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtieneAutotanquesPorRutaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtieneAutotanquesPorRutaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtieneAutotanquesPorRutaCompleted(Me, New ObtieneAutotanquesPorRutaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CancelaPedido", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CancelaPedido(ByVal Destino As Integer, ByVal Estacion As String, ByVal IDPedido As Integer) As Boolean
            Dim results() As Object = Me.Invoke("CancelaPedido", New Object() {Destino, Estacion, IDPedido})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginCancelaPedido(ByVal Destino As Integer, ByVal Estacion As String, ByVal IDPedido As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("CancelaPedido", New Object() {Destino, Estacion, IDPedido}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndCancelaPedido(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CancelaPedidoAsync(ByVal Destino As Integer, ByVal Estacion As String, ByVal IDPedido As Integer)
            Me.CancelaPedidoAsync(Destino, Estacion, IDPedido, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CancelaPedidoAsync(ByVal Destino As Integer, ByVal Estacion As String, ByVal IDPedido As Integer, ByVal userState As Object)
            If (Me.CancelaPedidoOperationCompleted Is Nothing) Then
                Me.CancelaPedidoOperationCompleted = AddressOf Me.OnCancelaPedidoOperationCompleted
            End If
            Me.InvokeAsync("CancelaPedido", New Object() {Destino, Estacion, IDPedido}, Me.CancelaPedidoOperationCompleted, userState)
        End Sub
        
        Private Sub OnCancelaPedidoOperationCompleted(ByVal arg As Object)
            If (Not (Me.CancelaPedidoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CancelaPedidoCompleted(Me, New CancelaPedidoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CancelaPedidoCallCenter", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CancelaPedidoCallCenter(ByVal Estacion As String, ByVal PedidoReferencia As String) As Boolean
            Dim results() As Object = Me.Invoke("CancelaPedidoCallCenter", New Object() {Estacion, PedidoReferencia})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginCancelaPedidoCallCenter(ByVal Estacion As String, ByVal PedidoReferencia As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("CancelaPedidoCallCenter", New Object() {Estacion, PedidoReferencia}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndCancelaPedidoCallCenter(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CancelaPedidoCallCenterAsync(ByVal Estacion As String, ByVal PedidoReferencia As String)
            Me.CancelaPedidoCallCenterAsync(Estacion, PedidoReferencia, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CancelaPedidoCallCenterAsync(ByVal Estacion As String, ByVal PedidoReferencia As String, ByVal userState As Object)
            If (Me.CancelaPedidoCallCenterOperationCompleted Is Nothing) Then
                Me.CancelaPedidoCallCenterOperationCompleted = AddressOf Me.OnCancelaPedidoCallCenterOperationCompleted
            End If
            Me.InvokeAsync("CancelaPedidoCallCenter", New Object() {Estacion, PedidoReferencia}, Me.CancelaPedidoCallCenterOperationCompleted, userState)
        End Sub
        
        Private Sub OnCancelaPedidoCallCenterOperationCompleted(ByVal arg As Object)
            If (Not (Me.CancelaPedidoCallCenterCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CancelaPedidoCallCenterCompleted(Me, New CancelaPedidoCallCenterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RegistrarMensaje", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RegistrarMensaje(ByVal Destino As Integer, ByVal Estacion As String, ByVal mensaje As String) As Boolean
            Dim results() As Object = Me.Invoke("RegistrarMensaje", New Object() {Destino, Estacion, mensaje})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginRegistrarMensaje(ByVal Destino As Integer, ByVal Estacion As String, ByVal mensaje As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("RegistrarMensaje", New Object() {Destino, Estacion, mensaje}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndRegistrarMensaje(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RegistrarMensajeAsync(ByVal Destino As Integer, ByVal Estacion As String, ByVal mensaje As String)
            Me.RegistrarMensajeAsync(Destino, Estacion, mensaje, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RegistrarMensajeAsync(ByVal Destino As Integer, ByVal Estacion As String, ByVal mensaje As String, ByVal userState As Object)
            If (Me.RegistrarMensajeOperationCompleted Is Nothing) Then
                Me.RegistrarMensajeOperationCompleted = AddressOf Me.OnRegistrarMensajeOperationCompleted
            End If
            Me.InvokeAsync("RegistrarMensaje", New Object() {Destino, Estacion, mensaje}, Me.RegistrarMensajeOperationCompleted, userState)
        End Sub
        
        Private Sub OnRegistrarMensajeOperationCompleted(ByVal arg As Object)
            If (Not (Me.RegistrarMensajeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RegistrarMensajeCompleted(Me, New RegistrarMensajeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AltaPedidoConfiguracionAnulada", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AltaPedidoConfiguracionAnulada(ByVal Estacion As String, ByVal Configuracion As String, ByVal Celula As Short, ByVal AñoPed As Short, ByVal IDPedido As Integer, ByVal Usuario As String, ByVal Observaciones As String) As Boolean
            Dim results() As Object = Me.Invoke("AltaPedidoConfiguracionAnulada", New Object() {Estacion, Configuracion, Celula, AñoPed, IDPedido, Usuario, Observaciones})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginAltaPedidoConfiguracionAnulada(ByVal Estacion As String, ByVal Configuracion As String, ByVal Celula As Short, ByVal AñoPed As Short, ByVal IDPedido As Integer, ByVal Usuario As String, ByVal Observaciones As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("AltaPedidoConfiguracionAnulada", New Object() {Estacion, Configuracion, Celula, AñoPed, IDPedido, Usuario, Observaciones}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndAltaPedidoConfiguracionAnulada(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AltaPedidoConfiguracionAnuladaAsync(ByVal Estacion As String, ByVal Configuracion As String, ByVal Celula As Short, ByVal AñoPed As Short, ByVal IDPedido As Integer, ByVal Usuario As String, ByVal Observaciones As String)
            Me.AltaPedidoConfiguracionAnuladaAsync(Estacion, Configuracion, Celula, AñoPed, IDPedido, Usuario, Observaciones, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AltaPedidoConfiguracionAnuladaAsync(ByVal Estacion As String, ByVal Configuracion As String, ByVal Celula As Short, ByVal AñoPed As Short, ByVal IDPedido As Integer, ByVal Usuario As String, ByVal Observaciones As String, ByVal userState As Object)
            If (Me.AltaPedidoConfiguracionAnuladaOperationCompleted Is Nothing) Then
                Me.AltaPedidoConfiguracionAnuladaOperationCompleted = AddressOf Me.OnAltaPedidoConfiguracionAnuladaOperationCompleted
            End If
            Me.InvokeAsync("AltaPedidoConfiguracionAnulada", New Object() {Estacion, Configuracion, Celula, AñoPed, IDPedido, Usuario, Observaciones}, Me.AltaPedidoConfiguracionAnuladaOperationCompleted, userState)
        End Sub
        
        Private Sub OnAltaPedidoConfiguracionAnuladaOperationCompleted(ByVal arg As Object)
            If (Not (Me.AltaPedidoConfiguracionAnuladaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AltaPedidoConfiguracionAnuladaCompleted(Me, New AltaPedidoConfiguracionAnuladaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class Celula
        
        Private extensionDataField As ExtensionDataObject
        
        Private descripcionField As String
        
        Private idCelulaField As Integer
        
        Private idEstacionSGCField As String
        
        '''<remarks/>
        Public Property ExtensionData() As ExtensionDataObject
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Descripcion() As String
            Get
                Return Me.descripcionField
            End Get
            Set
                Me.descripcionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IdCelula() As Integer
            Get
                Return Me.idCelulaField
            End Get
            Set
                Me.idCelulaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IdEstacionSGC() As String
            Get
                Return Me.idEstacionSGCField
            End Get
            Set
                Me.idEstacionSGCField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class ExtensionDataObject
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub BoletinarPedidoCompletedEventHandler(ByVal sender As Object, ByVal e As BoletinarPedidoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class BoletinarPedidoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ConsultaAutotanquesPorRutaYDiaCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultaAutotanquesPorRutaYDiaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultaAutotanquesPorRutaYDiaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ConsultaPedidosPorAutotanqueFechaCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultaPedidosPorAutotanqueFechaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultaPedidosPorAutotanqueFechaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ReasignacionCompletedEventHandler(ByVal sender As Object, ByVal e As ReasignacionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ReasignacionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ObtieneCelulasCompletedEventHandler(ByVal sender As Object, ByVal e As ObtieneCelulasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtieneCelulasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ObtieneRutasPorCelulaCompletedEventHandler(ByVal sender As Object, ByVal e As ObtieneRutasPorCelulaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtieneRutasPorCelulaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ObtieneAutotanquesPorRutaCompletedEventHandler(ByVal sender As Object, ByVal e As ObtieneAutotanquesPorRutaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtieneAutotanquesPorRutaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub CancelaPedidoCompletedEventHandler(ByVal sender As Object, ByVal e As CancelaPedidoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CancelaPedidoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub CancelaPedidoCallCenterCompletedEventHandler(ByVal sender As Object, ByVal e As CancelaPedidoCallCenterCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CancelaPedidoCallCenterCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub RegistrarMensajeCompletedEventHandler(ByVal sender As Object, ByVal e As RegistrarMensajeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RegistrarMensajeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub AltaPedidoConfiguracionAnuladaCompletedEventHandler(ByVal sender As Object, ByVal e As AltaPedidoConfiguracionAnuladaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AltaPedidoConfiguracionAnuladaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
End Namespace
